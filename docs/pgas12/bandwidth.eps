%!PS-Adobe-2.0 EPSF-2.0
%%Title: bandwidth_all.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Sep 20 19:56:06 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 482 226
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 487 M
5777 0 V
1827 0 R
84 0 V
1.000 UL
LTb
714 487 M
63 0 V
7625 0 R
-63 0 V
630 487 M
(256K) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 779 M
5777 0 V
1827 0 R
84 0 V
1.000 UL
LTb
714 779 M
63 0 V
7625 0 R
-63 0 V
630 779 M
(1M) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1070 M
5777 0 V
1827 0 R
84 0 V
1.000 UL
LTb
714 1070 M
63 0 V
7625 0 R
-63 0 V
-7709 0 R
(4M) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1361 M
7688 0 V
1.000 UL
LTb
714 1361 M
63 0 V
7625 0 R
-63 0 V
-7709 0 R
(16M) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1652 M
7688 0 V
1.000 UL
LTb
714 1652 M
63 0 V
7625 0 R
-63 0 V
-7709 0 R
(64M) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1943 M
7688 0 V
1.000 UL
LTb
714 1943 M
63 0 V
7625 0 R
-63 0 V
-7709 0 R
(256M) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2234 M
7688 0 V
1.000 UL
LTb
714 2234 M
63 0 V
7625 0 R
-63 0 V
-7709 0 R
(1G) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2526 M
7688 0 V
1.000 UL
LTb
714 2526 M
63 0 V
7625 0 R
-63 0 V
-7709 0 R
(4G) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2817 M
7688 0 V
1.000 UL
LTb
714 2817 M
63 0 V
7625 0 R
-63 0 V
-7709 0 R
(16G) Rshow
1.000 UL
LTb
1.000 UL
LTa
8036 420 M
0 63 V
0 700 R
0 1925 V
1.000 UL
LTb
8036 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
(1M) Cshow
1.000 UL
LTb
1.000 UL
LTa
7304 420 M
0 63 V
0 700 R
0 1925 V
1.000 UL
LTb
7304 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
(256K) Cshow
1.000 UL
LTb
1.000 UL
LTa
6572 420 M
0 63 V
0 700 R
0 1925 V
1.000 UL
LTb
6572 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
(64K) Cshow
1.000 UL
LTb
1.000 UL
LTa
5839 420 M
0 2688 V
1.000 UL
LTb
5839 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
(16K) Cshow
1.000 UL
LTb
1.000 UL
LTa
5107 420 M
0 2688 V
1.000 UL
LTb
5107 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
(4K) Cshow
1.000 UL
LTb
1.000 UL
LTa
4375 420 M
0 2688 V
1.000 UL
LTb
4375 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
(1K) Cshow
1.000 UL
LTb
1.000 UL
LTa
3643 420 M
0 2688 V
1.000 UL
LTb
3643 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
(256) Cshow
1.000 UL
LTb
1.000 UL
LTa
2911 420 M
0 2688 V
1.000 UL
LTb
2911 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
(64) Cshow
1.000 UL
LTb
1.000 UL
LTa
2178 420 M
0 2688 V
1.000 UL
LTb
2178 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
(16) Cshow
1.000 UL
LTb
1.000 UL
LTa
1446 420 M
0 2688 V
1.000 UL
LTb
1446 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
(4) Cshow
1.000 UL
LTb
1.000 UL
LTa
714 420 M
0 2688 V
1.000 UL
LTb
714 420 M
0 63 V
0 2625 R
0 -63 V
714 280 M
(1) Cshow
1.000 UL
LTb
1.000 UL
LTb
714 420 M
7688 0 V
0 2688 V
-7688 0 V
714 420 L
LTb
140 1764 M
currentpoint gsave translate 90 rotate 0 0 M
(Sustained Bandwidth \(bytes/sec\)) Cshow
grestore
LTb
4558 70 M
(Message size \(bytes\)) Cshow
LTb
4558 3318 M
(Sustained Bandwidth for Synchronous Remote Reads) Cshow
1.000 UP
3.000 UL
LT0
LTb
7751 1113 M
(Peak) Rshow
LT0
7835 1113 M
399 0 V
714 2962 M
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
78 0 V
77 0 V
78 0 V
1.000 UP
3.000 UL
LT1
LTb
7751 973 M
(UPC) Rshow
LT1
7835 973 M
399 0 V
714 942 M
366 153 V
366 145 V
366 145 V
366 146 V
366 133 V
367 152 V
366 142 V
366 134 V
366 137 V
366 128 V
366 127 V
366 121 V
366 103 V
366 74 V
366 44 V
367 29 V
366 18 V
366 16 V
366 0 V
366 13 V
366 0 V
714 942 Pls
1080 1095 Pls
1446 1240 Pls
1812 1385 Pls
2178 1531 Pls
2544 1664 Pls
2911 1816 Pls
3277 1958 Pls
3643 2092 Pls
4009 2229 Pls
4375 2357 Pls
4741 2484 Pls
5107 2605 Pls
5473 2708 Pls
5839 2782 Pls
6205 2826 Pls
6572 2855 Pls
6938 2873 Pls
7304 2889 Pls
7670 2889 Pls
8036 2902 Pls
8402 2902 Pls
8034 973 Pls
1.000 UP
3.000 UL
LT2
LTb
7751 833 M
(mpi4py \(buffer\)) Rshow
LT2
7835 833 M
399 0 V
714 835 M
366 149 V
366 125 V
366 164 V
366 92 V
366 153 V
367 133 V
366 123 V
366 127 V
366 109 V
366 107 V
366 6 V
366 93 V
366 55 V
366 54 V
366 43 V
367 50 V
366 13 V
366 4 V
366 3 V
366 -2 V
366 6 V
714 835 Crs
1080 984 Crs
1446 1109 Crs
1812 1273 Crs
2178 1365 Crs
2544 1518 Crs
2911 1651 Crs
3277 1774 Crs
3643 1901 Crs
4009 2010 Crs
4375 2117 Crs
4741 2123 Crs
5107 2216 Crs
5473 2271 Crs
5839 2325 Crs
6205 2368 Crs
6572 2418 Crs
6938 2431 Crs
7304 2435 Crs
7670 2438 Crs
8036 2436 Crs
8402 2442 Crs
8034 833 Crs
1.000 UP
3.000 UL
LT3
LTb
7751 693 M
(PyGAS) Rshow
LT3
7835 693 M
399 0 V
714 551 M
366 146 V
366 142 V
366 133 V
366 138 V
366 143 V
367 142 V
366 139 V
366 135 V
366 140 V
366 103 V
366 111 V
366 55 V
366 66 V
366 48 V
366 25 V
367 13 V
366 14 V
366 -3 V
366 3 V
366 9 V
366 -3 V
714 551 Star
1080 697 Star
1446 839 Star
1812 972 Star
2178 1110 Star
2544 1253 Star
2911 1395 Star
3277 1534 Star
3643 1669 Star
4009 1809 Star
4375 1912 Star
4741 2023 Star
5107 2078 Star
5473 2144 Star
5839 2192 Star
6205 2217 Star
6572 2230 Star
6938 2244 Star
7304 2241 Star
7670 2244 Star
8036 2253 Star
8402 2250 Star
8034 693 Star
1.000 UP
3.000 UL
LT7
LTb
7751 553 M
(mpi4py \(pickle\)) Rshow
LT7
7835 553 M
399 0 V
714 420 M
366 151 V
366 146 V
366 149 V
366 135 V
366 151 V
367 136 V
366 134 V
366 130 V
366 142 V
366 121 V
366 80 V
366 104 V
366 52 V
366 73 V
366 41 V
367 -15 V
366 -10 V
366 -143 V
366 -12 V
366 9 V
366 -43 V
714 420 Box
1080 571 Box
1446 717 Box
1812 866 Box
2178 1001 Box
2544 1152 Box
2911 1288 Box
3277 1422 Box
3643 1552 Box
4009 1694 Box
4375 1815 Box
4741 1895 Box
5107 1999 Box
5473 2051 Box
5839 2124 Box
6205 2165 Box
6572 2150 Box
6938 2140 Box
7304 1997 Box
7670 1985 Box
8036 1994 Box
8402 1951 Box
8034 553 Box
1.000 UL
LTb
714 420 M
7688 0 V
0 2688 V
-7688 0 V
714 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
